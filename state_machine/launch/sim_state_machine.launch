<launch>
	<!-- TODO -->
	<!-- Add launch files to each package for standalone testing/debugging -->
	<!-- Sim: Add qgroundcontrol exec start-->
	<!-- Flight: Add unity exec start-->
	
	<!-- Parameters -->
	<!-- Waypoint convergence threshold, absolute distance in 3D space -->
	<arg name="wp_convergence_threshold" default="0.2"/>
	<!-- Waypoint stop threshold, absolute velocity in 3D space -->
	<arg name="wp_stopped_threshold" default="0.2"/>
	<!-- Type of perching maneuver, 1-no perch 2-vertical 3-inclined -->
  	<arg name="perching_type" default="2"/>
	<!-- Threshold value for time to contact, disarms and closes the arms -->
	<arg name="ttc_threshold" default="0.25"/>
	<!-- Maximum acceleration of the geometric controller -->
  	<arg name="max_acc" default="7.0"/>
	
	<!-- State Machine -->
	<node name="state_machine" pkg="state_machine" type="state_machine" output="screen" clear_params = "true">
		<rosparam command="load" file="$(find planner)/cfg/waypoints_cfg.yaml"/>
		<param name="wp_convergence_threshold" value="$(arg wp_convergence_threshold)" />
		<param name="wp_stopped_threshold" value="$(arg wp_stopped_threshold)" />
		<param name="ttc_threshold" value="$(arg ttc_threshold)" />
		<param name="perching_type" value="$(arg perching_type)" />
    </node>

	<!--- Trajectory Planner -->
	<node name="planner" pkg="planner" type="planner" output="screen" clear_params = "true">
		<rosparam command="load" file="$(find planner)/cfg/trajectory_config.yaml"/>
		<rosparam command="load" file="$(find planner)/cfg/vertical_perching_config.yaml"/>
		<rosparam command="load" file="$(find planner)/cfg/inclined_perching_config.yaml"/>
		<param name="perching_type" value="$(arg perching_type)" />
	</node>

	<!-- Trajectory Sampler -->
	<node name="sampler" pkg="mav_trajectory_generation_ros" type="trajectory_sampler_node" output="screen">
		<remap from="path_segments_4D" to="trajectory"/>
	</node >

	<!-- RVIZ -->
	<node type="rviz" name="rviz" pkg="rviz" respawn="false" args="-d $(find planner)/launch/trajectory_config.rviz" />

	<!-- Mavros Controllers -->
	<!-- Iris copter in gazebo -->
  	<arg name="mav_name" default="iris"/>  
  	<!-- 2 = ERROR_GEOMETRIC for geometric tracking controller -->
  	<arg name="command_input" default="2" />
  	<!-- Switch to offboard mode and arm, disabled when used w. state machine -->
  	<arg name="auto_arm_controller" default="false" />
	<!-- Geometric Controller -->
  	<node pkg="geometric_controller" type="geometric_controller_node" name="geometric_controller">
  		<param name="mav_name" type="string" value="$(arg mav_name)" />
          <remap from="command/bodyrate_command" to="/mavros/setpoint_raw/attitude"/>
          <param name="ctrl_mode" value="$(arg command_input)" />
          <param name="enable_sim" value="$(arg auto_arm_controller)" />
          <param name="enable_gazebo_state" value="true"/>
		  <param name="init_pos_x" value="0.0" />
		  <param name="init_pos_y" value="0.0" />
		  <param name="init_pos_z" value="-1.0" />
          <!--Params specific for Iris copter-->
          <param name="attctrl_constant" value="0.3"/>
          <param name="normalizedthrust_constant" value="0.06"/>
          <param name="normalizedthrust_offset" value="0.1"/>
          <param name="max_acc" value="$(arg max_acc)" />
		  <param name="Kp_x" value="10.0" />
          <param name="Kp_y" value="10.0" />
          <param name="Kp_z" value="20.0" />
          <param name="Kv_x" value="5.0"/>
          <param name="Kv_y" value="5.0"/>
          <param name="Kv_z" value="10.0"/>
  	</node>

	<!-- Launch rqt_reconfigure -->
  	<!-- node pkg="rqt_reconfigure" type="rqt_reconfigure" output="screen" name="rqt_reconfigure" /-->

</launch>


